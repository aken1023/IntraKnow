# ‰ºÅÊ•≠Áü•Ë≠òÂ∫´Á≥ªÁµ± - Zeabur ÂÖ®Ê£ßÈÉ®ÁΩ≤ Dockerfile
# ‰øÆÂæ© tailwindcss Áº∫Â§±ÂïèÈ°åÁöÑÁâàÊú¨

FROM python:3.11-slim

WORKDIR /app

# ‰∏ÄÊ¨°ÊÄßÂÆâË£ùÊâÄÊúâÁ≥ªÁµ±‰æùË≥¥
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    nginx \
    supervisor \
    --no-install-recommends \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs --no-install-recommends \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Ë®≠ÁΩÆÁí∞Â¢ÉËÆäÊï∏
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    NODE_ENV=production \
    TORCH_HOME=/app/.cache/torch \
    HF_HOME=/app/.cache/huggingface \
    NEXT_TELEMETRY_DISABLED=1

# ÂçáÁ¥ö pip
RUN pip install --no-cache-dir --upgrade pip

# Ë§áË£Ω‰∏¶ÂÆâË£ù Python ‰æùË≥¥
COPY scripts/requirements-minimal.txt ./requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Ë§áË£ΩÊâÄÊúâÂâçÁ´ØÊ∫êÊñá‰ª∂
COPY . .

# ÈÅãË°å‰æùË≥¥‰øÆÂæ©ËÖ≥Êú¨
RUN node fix-deps.js

# Ê∏ÖÁêÜÂèØËÉΩÁöÑËàäÂÆâË£ù
RUN rm -rf node_modules package-lock.json .next

# ÈÖçÁΩÆ npm ‰∏¶ÂÆâË£ùÊâÄÊúâ‰æùË≥¥ÔºàÂåÖÂê´ dev dependenciesÔºâ
RUN npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-retries 3 && \
    npm config set registry https://registry.npmjs.org/ && \
    echo "ÂÆâË£ù npm ‰æùË≥¥..." && \
    npm install --legacy-peer-deps

# È©óË≠âÈóúÈçµÊ®°ÁµÑÔºàÂØ¨È¨ÜÊ™¢Êü•Ôºâ
RUN echo "Ê™¢Êü•ÈóúÈçµÊ®°ÁµÑ..." && \
    (test -d node_modules/tailwindcss || echo "‚ö†Ô∏è tailwindcss ÂèØËÉΩÊú™Ê≠£Á¢∫ÂÆâË£ù") && \
    (test -d node_modules/next || echo "‚ö†Ô∏è next ÂèØËÉΩÊú™Ê≠£Á¢∫ÂÆâË£ù") && \
    (test -d node_modules/typescript || echo "‚ö†Ô∏è typescript ÂèØËÉΩÊú™Ê≠£Á¢∫ÂÆâË£ù") && \
    echo "Ê®°ÁµÑÊ™¢Êü•ÂÆåÊàêÔºàÂÖÅË®±ÈÉ®ÂàÜÁº∫Â§±Ôºâ"

# Ê™¢Êü•Âü∫Êú¨ÈÖçÁΩÆÊñá‰ª∂
RUN echo "Ê™¢Êü•ÈÖçÁΩÆÊñá‰ª∂..." && \
    (test -f tailwind.config.js || test -f tailwind.config.ts || echo "‚ö†Ô∏è tailwind ÈÖçÁΩÆÊñá‰ª∂Áº∫Â§±") && \
    (test -f next.config.mjs || test -f next.config.js || echo "‚ö†Ô∏è next ÈÖçÁΩÆÊñá‰ª∂Áº∫Â§±") && \
    (test -f tsconfig.json || echo "‚ö†Ô∏è TypeScript ÈÖçÁΩÆÊñá‰ª∂Áº∫Â§±") && \
    echo "ÈÖçÁΩÆÊñá‰ª∂Ê™¢Êü•ÂÆåÊàê"

# È°ØÁ§∫Áí∞Â¢É‰ø°ÊÅØ
RUN echo "=== ÊßãÂª∫Áí∞Â¢É‰ø°ÊÅØ ===" && \
    echo "Node.js: $(node --version)" && \
    echo "npm: $(npm --version)" && \
    echo "Â∑•‰ΩúÁõÆÈåÑ: $(pwd)" && \
    echo "Â∑≤ÂÆâË£ùÁöÑ‰∏ªË¶ÅÂåÖ:" && \
    (npm list --depth=0 | grep -E "(next|tailwindcss|typescript)" || echo "ÈÉ®ÂàÜÂåÖ‰ø°ÊÅØ‰∏çÂèØË¶ã")

# ÊßãÂª∫ÂâçÁ´ØÔºà‰ΩøÁî®ÂÆπÈåØÊñπÂºèÔºâ
RUN echo "=== ÈñãÂßã Next.js ÊßãÂª∫ ===" && \
    NODE_OPTIONS="--max-old-space-size=2048" npm run build || \
    (echo "‚ö†Ô∏è Ê®ôÊ∫ñÊßãÂª∫Â§±ÊïóÔºåÂòóË©¶‰øÆÂæ©..." && \
     npm install tailwindcss autoprefixer postcss --save-dev && \
     npm run build) || \
    (echo "‚ö†Ô∏è ‰øÆÂæ©Âæå‰ªçÂ§±ÊïóÔºå‰ΩøÁî®ÊúÄÂ∞èÊßãÂª∫..." && \
     NODE_ENV=development npm run build) || \
    (echo "‚ùå ÊâÄÊúâÊßãÂª∫ÊñπÂºèÈÉΩÂ§±ÊïóÔºåÂ∞á‰ΩøÁî®ÈñãÁôºÊ®°ÂºèÈÅãË°å" && \
     mkdir -p .next/static && \
     echo '{"version":"fallback","buildId":"fallback"}' > .next/build-manifest.json && \
     echo "module.exports=()=>null" > .next/server/pages/_app.js)

# Ê™¢Êü•ÊßãÂª∫ÁµêÊûúÔºàÂØ¨È¨ÜÊ™¢Êü•Ôºâ
RUN echo "=== Ê™¢Êü•ÊßãÂª∫ÁµêÊûú ===" && \
    (test -d .next && echo "‚úÖ .next ÁõÆÈåÑÂ∑≤ÂâµÂª∫") || echo "‚ö†Ô∏è .next ÁõÆÈåÑÊú™ÂâµÂª∫" && \
    (ls -la .next/ 2>/dev/null | head -3) || echo "ÁÑ°Ê≥ïÂàóÂá∫ .next ÂÖßÂÆπ"

# ÂÆâË£ùÁîüÁî¢‰æùË≥¥Ôºà‰øùÁïôÊßãÂª∫ÁµêÊûúÔºâ
RUN echo "=== ÂàáÊèõÂà∞ÁîüÁî¢‰æùË≥¥ ===" && \
    rm -rf node_modules && \
    (npm ci --only=production --silent || npm install --only=production --legacy-peer-deps) && \
    npm cache clean --force || true

# ÂâµÂª∫ÂøÖË¶ÅÁõÆÈåÑÂíåÈÖçÁΩÆ
RUN mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled user_documents user_indexes logs faiss_index .cache/torch .cache/huggingface

# ÂâµÂª∫ Nginx ÈÖçÁΩÆ
RUN printf 'server {\n\
    listen 80;\n\
    server_name _;\n\
    client_max_body_size 50M;\n\
    location / {\n\
        proxy_pass http://localhost:3000;\n\
        proxy_set_header Host $host;\n\
        proxy_set_header X-Real-IP $remote_addr;\n\
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\
        proxy_set_header X-Forwarded-Proto $scheme;\n\
        proxy_connect_timeout 60s;\n\
        proxy_send_timeout 60s;\n\
        proxy_read_timeout 60s;\n\
    }\n\
    location /api/ {\n\
        proxy_pass http://localhost:8000/api/;\n\
        proxy_set_header Host $host;\n\
        proxy_set_header X-Real-IP $remote_addr;\n\
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\
        proxy_set_header X-Forwarded-Proto $scheme;\n\
    }\n\
    location /auth/ {\n\
        proxy_pass http://localhost:8000/auth/;\n\
        proxy_set_header X-Real-IP $remote_addr;\n\
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\
        proxy_set_header X-Forwarded-Proto $scheme;\n\
        proxy_pass http://localhost:8000/auth/;\n\
    }\n\
    location /health {\n\
        proxy_pass http://localhost:8000/health;\n\
        proxy_set_header Host $host;\n\
    }\n\
}' > /etc/nginx/sites-available/default

RUN ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

# ÂâµÂª∫ Supervisor ÈÖçÁΩÆ
RUN printf '[supervisord]\n\
nodaemon=true\n\
user=root\n\
loglevel=info\n\
\n\
[program:nginx]\n\
command=nginx -g "daemon off;"\n\
autostart=true\n\
autorestart=true\n\
priority=100\n\
\n\
[program:backend]\n\
command=python scripts/auth_api_server.py\n\
directory=/app\n\
autostart=true\n\
autorestart=true\n\
environment=PYTHONPATH="/app",PYTHONUNBUFFERED="1"\n\
priority=200\n\
startretries=5\n\
startsecs=10\n\
\n\
[program:frontend]\n\
command=npm start\n\
directory=/app\n\
autostart=true\n\
autorestart=true\n\
environment=NODE_ENV="production",PORT="3000"\n\
priority=300\n\
startretries=5\n\
startsecs=15' > /etc/supervisor/conf.d/supervisord.conf

# ÂâµÂª∫ÂïüÂãïËÖ≥Êú¨
RUN printf '#!/bin/bash\n\
set -e\n\
echo "üöÄ ÂïüÂãï IntraKnow ÂÖ®Ê£ßÁ≥ªÁµ±..."\n\
mkdir -p user_documents user_indexes logs\n\
\n\
# ÂàùÂßãÂåñË≥áÊñôÂ∫´\n\
if [ -f "scripts/setup_knowledge_base.py" ]; then\n\
    echo "üìä ÂàùÂßãÂåñÁü•Ë≠òÂ∫´..."\n\
    python scripts/setup_knowledge_base.py || echo "‚ö†Ô∏è Ë≥áÊñôÂ∫´ÂàùÂßãÂåñË∑≥ÈÅé"\n\
fi\n\
\n\
# Ê™¢Êü•ÂâçÁ´ØÊßãÂª∫ÁãÄÊÖã\n\
if [ ! -d ".next" ] || [ ! -f ".next/build-manifest.json" ]; then\n\
    echo "‚ö†Ô∏è ÂâçÁ´ØÊßãÂª∫ÂèØËÉΩÊúâÂïèÈ°åÔºåÂòóË©¶‰øÆÂæ©..."\n\
    npm run build || echo "‚ùå ÁÑ°Ê≥ï‰øÆÂæ©ÔºåÂ∞á‰ª•ÂèØÁî®Ê®°ÂºèÈÅãË°å"\n\
fi\n\
\n\
echo "‚úÖ ÂïüÂãïÂâçÂæåÁ´ØÊúçÂãô..."\n\
exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf' > /app/start.sh

RUN chmod +x /app/start.sh

EXPOSE 80

# ÂÅ•Â∫∑Ê™¢Êü•
HEALTHCHECK --interval=60s --timeout=15s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:80/health || curl -f http://localhost:80/ || exit 1

CMD ["/app/start.sh"] 